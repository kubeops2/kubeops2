#!/bin/bash

# double line
double_line() {
    echo;echo
}

# info logs the given argument at info log level.
info() {
    echo "[INFO] " "$@"
}

# warn logs the given argument at warn log level.
warn() {
    echo "[WARN] " "$@" >&2
}

# fatal logs the given argument at fatal log level.
error() {
    echo "[ERR] " "$@" >&2
}

# show usage of this tool
usage() {
    echo "${INIT_USAGE}"
}

# install gum
install_gum() {
    info "::: Install Gum..."
    if ! $(dpkg -s gum &> /dev/null); then
        sudo mkdir -p /etc/apt/keyrings
        curl -fsSL https://repo.charm.sh/apt/gpg.key | gpg --dearmor -o /etc/apt/keyrings/charm.gpg
        echo "deb [signed-by=/etc/apt/keyrings/charm.gpg] https://repo.charm.sh/apt/ * *" | tee /etc/apt/sources.list.d/charm.list
        apt update && apt install gum
    fi
    double_line
    info "::: Finished installation of Gum ..."
}

# install yjq
install_yjq() {
    if ! $(which yq &> /dev/null); then
        info "::: Install yq using snap ..."
        snap install yq
    fi

    if ! $(which jq &> /dev/null); then
        info "::: Install jq using snap ..."
        snap install jq
    fi
}

# check RKE2 CONFIG DIR and File
check_config_dir() {
    if [ ! -d $(dirname "${RKE2_CONFIG_YAML}") ]; then
        mkdir -p $(dirname "${RKE2_CONFIG_YAML}")
        touch "${RKE2_CONFIG_YAML}"
    fi
}

# RKE2 server config
cluster_config() {
    gum spin --spinner dot --title "::: Start Configuring RKE2 Cluster :::" -- sleep ${RUNDELAY}
    check_config_dir
    RKE2_TOKEN=$(cat ${RKE2_TOKEN_PATH})
    if $(gum confirm "First Master ?"); then
        while :; do
            double_line
            L4_IP=$(gum input --header="::: Enter LoadBalancer IP Address - " --value=${GUM_CASE_L4_IP})
            NODE1_IP=$(gum input --header="::: Enter 1st Node IP Address - " --value=${GUM_CASE_NODE_IP})
            NODE2_IP=$(gum input --header="::: Enter 2nd Node IP Address - " --value=${GUM_CASE_NODE_IP})
            NODE3_IP=$(gum input --header="::: Enter 3rd Node IP Address - " --value=${GUM_CASE_NODE_IP})
            
            double_line
            gum write --header='Check the below and Enter' --height=15 <<EOF > ${RKE2_CONFIG_YAML}
token: ${RKE2_TOKEN}
tls-san:
  - ${L4_IP}
  - ${NODE1_IP}
  - ${NODE2_IP}
  - ${NODE3_IP}
EOF
            if $(gum confirm "Is Everything Correct ?"); then
                double_line
                info "::: ${RKE2_CONFIG_YAML} file is saved ..."
                break
            else
                info "::: Generating config.yaml Again ..."
                continue
            fi
        done

        # Generating config.yaml for Master nodes
        double_line
        info "::: Generating ${RKE2_CONFIG_YAML_4SERVER} for Another Masters ... "
        cat <<EOF > ${RKE2_CONFIG_YAML_4SERVER}
server: https://${L4_IP}:9345
token: ${RKE2_TOKEN}
tls-san:
  - ${L4_IP}
  - ${NODE1_IP}
  - ${NODE2_IP}
  - ${NODE3_IP}
EOF
        double_line
        info "::: Generating ${RKE2_CONFIG_YAML_4AGENT} for Workers ... "
        cat <<EOF > ${RKE2_CONFIG_YAML_4AGENT}
server: https://${L4_IP}:9345
token: ${RKE2_TOKEN}
EOF
    else
        gum spin --spinner dot --title "::: Config RKE2 Additional Master Nodes ... " -- sleep ${RUNDELAY}
        # loading server config.yaml file
        while :; do
            double_line
            gum write --header="Check the belows and Enter..." --height=15 < ${RKE2_CONFIG_YAML_4SERVER}
            if $(gum confirm "Is Everything Correct ?"); then
                double_line
                info "::: ${RKE2_CONFIG_YAML_4SERVER} file is saved ..."
                break
            else
                info "::: Generating config.yaml Again ..."
                continue
            fi
        done
    fi
}

# RKE2 agent config
agent_config() {
    gum spin --spinner dot --title "::: Config RKE2 Worker Node ... " -- sleep ${RUNDELAY}
    check_config_dir
    # loading server config.yaml file
    while :; do
        double_line
        gum write --header "Check the belows and Enter ..." < ${RKE2_CONFIG_YAML_4AGENT}
        if $(gum confirm "Is Everything Correct ?"); then
            double_line
            info "::: ${RKE2_CONFIG_YAML_4AGENT} file is saved ..."
            break
        else
            info "::: Generating config.yaml Again ..."
            continue
        fi        
    done
}